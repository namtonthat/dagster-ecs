services:
  postgres:
    image: postgres:15
    container_name: dagster_postgres
    environment:
      POSTGRES_USER: dagster
      POSTGRES_PASSWORD: dagster
      POSTGRES_DB: dagster
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dagster"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dagster_network

  # Dagster webserver with nginx auth proxy
  # Mirrors production ECS setup but with local DAG mounting instead of S3 sync
  dagster-webserver:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: dagster_webserver
    ports:
      - "3000:80"
    environment:
      DAGSTER_POSTGRES_USER: dagster
      DAGSTER_POSTGRES_PASSWORD: dagster
      DAGSTER_POSTGRES_DB: dagster
      DAGSTER_POSTGRES_HOST: postgres
      DAGSTER_POSTGRES_PORT: 5432
      DAGSTER_HOME: /app/.dagster_home
      DAGSTER_AUTH_USER: admin
      DAGSTER_AUTH_PASSWORD: DagsterPipeline2024!
      DAGSTER_DOCKER_IMAGE: dagster-ecs-dagster-webserver:latest
      # For local development, S3 is optional
      DAGSTER_S3_BUCKET: local-dagster-bucket
      AWS_DEFAULT_REGION: ap-southeast-2
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    volumes:
      - ./dags:/app/dags
      - ./workspace.yaml:/app/workspace.yaml
      - ./dagster-local.yaml:/app/.dagster_home/dagster.yaml
      - ./.dagster_home:/app/.dagster_home
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker run launcher
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dagster_network

  # Dagster daemon for schedules, sensors, and run queue
  # Mirrors production ECS daemon setup
  dagster-daemon:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: dagster_daemon
    command: ["dagster-daemon", "run"]
    environment:
      DAGSTER_POSTGRES_USER: dagster
      DAGSTER_POSTGRES_PASSWORD: dagster
      DAGSTER_POSTGRES_DB: dagster
      DAGSTER_POSTGRES_HOST: postgres
      DAGSTER_POSTGRES_PORT: 5432
      DAGSTER_HOME: /app/.dagster_home
      DAGSTER_DOCKER_IMAGE: dagster-ecs-dagster-webserver:latest
      # For local development, S3 is optional
      DAGSTER_S3_BUCKET: local-dagster-bucket
      AWS_DEFAULT_REGION: ap-southeast-2
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    volumes:
      - ./dags:/app/dags
      - ./workspace.yaml:/app/workspace.yaml
      - ./dagster-local.yaml:/app/.dagster_home/dagster.yaml
      - ./.dagster_home:/app/.dagster_home
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker run launcher
    depends_on:
      postgres:
        condition: service_healthy
      dagster-webserver:
        condition: service_started
    restart: unless-stopped
    networks:
      - dagster_network

volumes:
  postgres_data:

networks:
  dagster_network:
    driver: bridge